@page "/dashboard"
@rendermode InteractiveServer
@inject TaskService TaskService

<PageTitle>Dashboard</PageTitle>

@if (isLoading)
{
    <div class="text-center">
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>
}
else if (tasks == null || tasks.Count == 0)
{
    <p>No tasks found.</p>
}
else
{
    <div class="row">
    <div class="col-md-4">
        <NewTasks Tasks="newTasks" />
    </div>
    <div class="col-md-4">
        <InprogressTasks Tasks="inprogressTasks" />
    </div>
    <div class="col-md-4">
        <CompletedTasks Tasks="completedTasks" />
    </div>
</div>
}
@code {
    private List<TaskModel> tasks;
    private List<TaskModel> newTasks;
    private List<TaskModel> inprogressTasks;
    private List<TaskModel> completedTasks;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            tasks = await TaskService.GetTasksAsync();
            newTasks = tasks.Where(d => d.State == TaskState.New).ToList();
            inprogressTasks = tasks.Where(d => d.State == TaskState.InProgress).ToList();
            completedTasks = tasks.Where(d => d.State == TaskState.Done).ToList();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to load tasks: {ex.Message}");
            tasks = new List<TaskModel>();
        }
        finally
        {
            isLoading = false;
        }
    }
}